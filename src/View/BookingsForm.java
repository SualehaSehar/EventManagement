/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.EventDao;
import Model.DateTimeUtil;
import Model.Event;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ammar
 */
public class BookingsForm extends javax.swing.JPanel {
    private MainUI main;
    DefaultTableModel model;
    /**
     * Creates new form BookingsForm
     */
    public BookingsForm(MainUI main) {
        this.main = main;
        initComponents();
        model = (DefaultTableModel) tblbookings.getModel();
        tblbookings.removeColumn(tblbookings.getColumnModel().getColumn(0));
        loadData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblbookings = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btndelete = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblbookings.setAutoCreateRowSorter(true);
        tblbookings.setFont(new java.awt.Font("Bookman Old Style", 0, 11)); // NOI18N
        tblbookings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EventID", "Email", "Event Type", "Venue Name", "Venue Type", "Event Date (Start)", "Event Date (End)", "No Of Guest"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblbookings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblbookingsMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblbookings);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 780, 470));

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 36)); // NOI18N
        jLabel1.setText("View Bookings");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 330, 70));

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 160, 80, 30));

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 30, 80, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/406199-white-abstract-wallpaper.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        this.main.addComponent(new HomePageForm(this.main));
    }//GEN-LAST:event_btnbackActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        int i = tblbookings.getSelectedRow();
        if(i!=-1){
            EventDao.deleteEvent(model.getValueAt(i, 0).toString());
            EventDao.deleteEventFood(model.getValueAt(i, 0).toString());
            EventDao.deleteEventEquipment(model.getValueAt(i, 0).toString());
            loadData();
        }else{
            JOptionPane.showMessageDialog(BookingsForm.this, "Select any Row");
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void tblbookingsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblbookingsMousePressed
        // TODO add your handling code here:
        int i = tblbookings.getSelectedRow();
        if(evt.getClickCount() == 2 && i != -1){
            this.main.addComponent(new BookingDetailsForm(this.main,(String)model.getValueAt(i, 0)));
        }
    }//GEN-LAST:event_tblbookingsMousePressed
    private void loadData(){
        if(LoginForm.getUserType().equalsIgnoreCase("MANAGER")){
            ArrayList<Event> list = EventDao.readAllEvents();
            model.setRowCount(0);
            for(int i=0; i<list.size(); i++){
                Event item = list.get(i);
                String eventID = item.getEventID();
                String email = LoginForm.getEmail();
                String eventType = item.getEventType();
                String venueName = item.getVenueName();
                String venueType = item.getEventType();
                Date eventStartDate = DateTimeUtil.updateTime(item.getEventDate(), item.getStartTime());
                Date eventEndDate =  DateTimeUtil.updateTime(item.getEventDate(), item.getEndTime());
                int noOfGuest = item.getNoOfGuest();
                addRow(eventID,email,eventType,venueName, venueType,eventStartDate,eventEndDate,noOfGuest);
            }
        }
        else{
            ArrayList<Event> list = EventDao.readEventsByPersonID(LoginForm.getPersonID());
            model.setRowCount(0);
            for(int i=0; i<list.size(); i++){
                Event item = list.get(i);
                String eventID = item.getEventID();
                String email = LoginForm.getEmail();
                String eventType = item.getEventType();
                String venueName = item.getVenueName();
                String venueType = item.getEventType();
                Date eventStartDate = DateTimeUtil.updateTime(item.getEventDate(), item.getStartTime());
                Date eventEndDate =  DateTimeUtil.updateTime(item.getEventDate(), item.getEndTime());
                int noOfGuest = item.getNoOfGuest();
                addRow(eventID,email,eventType,venueName, venueType,eventStartDate,eventEndDate,noOfGuest);
            }
        }
    }

    private void addRow(String eventID,String email,String eventType,String venueName,String venueType,Date eventStartDate,Date eventEndDate,
        int noOfGuest){
        model.insertRow(tblbookings.getRowCount(), new Object[]{eventID,email,eventType,venueName, venueType,eventStartDate,eventEndDate,noOfGuest});
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblbookings;
    // End of variables declaration//GEN-END:variables
}
